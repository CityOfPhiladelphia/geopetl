# .github/workflows/oracle_tests.yml

name: test_oracle.py

# Controls when the action will run. Triggers the workflow on push or pull request events but only for the master branch.

on:
  push:
    branches:
      - master
      - dev-pass
    # Reference: https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestpaths
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
    paths:
      - 'geopetl/tests/test_oracle.py'
      # Trigger on changes to geopetl code-base
      - 'geopetl/**'
      # changes to this workflow file itself.
      - '.github/workflows/oracle_tests.yml'
      # changes to the geopetl setup.py
      - 'setup.py'
      # changes to oracle-specific docker stuff
      - 'oracle-docker-compose.yml'
      - 'oracle_Dockerfile'
      # changes to the docker entrypoint.sh script that runs our pytest commands
      - 'scripts/*'


jobs:
  build:
    name: Build and Test Geopetl against PostGIS db
    # The type of runner that the job will run on
    runs-on: self-hosted
    steps: 

    - uses: actions/checkout@v1

    - name: Build and bring up the Docker image using docker-compose
      # Abort when any coontainer exits, and return the exit code from geopetl.
      # Otherwise docker-compose won't stop because postgis doesn't exit.
      run: docker-compose -f oracle-docker-compose.yml up --build --abort-on-container-exit --exit-code-from geopetl
      env:
        ORACLE_USER: ${{ secrets.pg_user }}
        ORACLE_PASSWORD: ${{ secrets.pg_pw }}
        ORACLE_DB: ${{ secrets.pg_db }}
        ORACLE_HOST: ${{ secrets.host }}

# TODO: push image to ECR?
#    - name: Docker Push to ECR (${{ steps.global-vars.outputs.aws_env_prefix }})
#      env: 
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        REPOSITORY_URL: 





