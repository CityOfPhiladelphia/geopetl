# .github/workflows/main.yml
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request events but only for the master branch.
on:
  push:
    branches: add_tests

jobs:
  container-job:
    runs-on: ubuntu-latest
    
    # runs all of the steps inside the specified container rather than on the VM host.  
    # Because of this the network configuration changes from host based network to a container network.

    services:
      postgres:
        image: mdillon/postgis:11-alpine
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: ${{secrets.pg_db}}
          POSTGRES_USER: ${{secrets.pg_user}}
          POSTGRES_PASSWORD: ${{secrets.pg_pw}}
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: print hw
      run: echo hello world!

    # Runs a single command using the runners shell
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.7.7'


    - name: install dependencies
        #python setup.py
      run: |
        echo $PWD
        ls
        pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        pip install pytest
        pip install pytest-cov

    - name: test with Oracle
      env:
        oracle_user: ${{secrets.oracle_user}}
        oracle_pw: ${{secrets.oracle_pw}}
        oracle_host: ${{secrets.oracle_host}}
        oracle_service_name: ${{secrets.oracle_service_name}}
        oracle_port: ${{secrets.oracle_port}}
      run: |
        echo $oracle_user
        echo $oracle_pw
        echo $oracle_host
        echo $oracle_port
        echo oracle_service_name
        pytest geopetl/tests/test_oraclesde.py --host=oracle_host --port=oracle_port  --user=oracle_user --pw=oracle_pw --service_name=oracle_service_name


#    - name: is postgres working
#      run: pg_isready  -h localhost
#
#
#    - name: test with psycopg
#      env:
#        pg_user: ${{secrets.pg_user}}
#        pg_pw: ${{secrets.pg_pw}}
#        pg_db: ${{secrets.pg_db}}
#      run: |
#        echo $pg_user
#        echo $pg_db
#        echo $pg_pw
#        pytest geopetl/tests/test_conn.py --db=pg_db --user=pg_user --pw=pg_pw
#
#
#      # Runs a set of commands using the runners shell
#    - name: Test with pytest
#      env:
#        pg_user: ${{secrets.pg_user}}
#        pg_pw: ${{secrets.pg_pw}}
#        pg_db: ${{secrets.pg_db}}
#      run: |
#        echo $PWD
#        ls
#        pytest geopetl/tests/test_postgis.py --db=pg_db --user=pg_user --pw=pg_pw --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
