# .github/workflows/postgis_tests.yml

name: test_postgis.py

# Controls when the action will run. Triggers the workflow on push requests to certain files.
on:
  push:
    # Reference: https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestpaths
    # Filter reference: https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
    paths:
      # Trigger on changes to geopetl code-base
      - 'geopetl/**'
      # changes to this workflow file itself.
      - '.github/workflows/postgis_tests.yml'
      # changes to the geopetl setup.py
      - 'setup.py'
      # changes to postgis-specific docker stuff
      - 'postgis-docker-compose.yml'
      - 'geopetl_Dockerfile'
      # changes to the docker entrypoint.sh script that runs our pytest commands
      - 'scripts/entrypoint.sh'
      - '.github/workflows/postgis_tests.yml'


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build and bring up the Docker image using docker-compose
        run: |
          echo "logging in ecr"
          echo "docker all containers in ECR"
          docker ps -a
          pwd
          docker-compose -f postgis-docker-compose.yml up --build -d
          echo "ran docker compose command."
        env:
          POSTGRES_PASSWORD: ${{ secrets.pg_pw }}

      - name: Run pytests
        run: docker exec geopetl /bin/bash -c "/usr/local/bin/postgis_tests.sh" 

# TODO: push image to ECR?
#    - name: Docker Push to ECR (${{ steps.global-vars.outputs.aws_env_prefix }})
#      env: 
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        REPOSITORY_URL: 





