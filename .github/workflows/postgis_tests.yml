name: geopetl_pytest_v2

# Controls when the action will run. Triggers the workflow on push or pull request events but only for the master branch.
on:
  push:
    branches:
      - roland_testing_5-20-19
#    paths:
#      - './geopetl/tests/test_postgis.py'


jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps: 

    - uses: actions/checkout@v1

    - name: Pull Oracle Instant Client rpm from S3 for Geopetl container
      id: pull-oracle-rpm 
      run: bash ./pull-oracle-rpm.sh
      env: 
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Check resources
      run:  less /proc/cpuinfo

    - name: Check resources 2
      run: free -h

    - name: Build and bring up the Docker image using docker-compose
      run: docker-compose up -d --build; docker logs geopetl
      env:
        POSTGRES_USER: ${{ secrets.pg_user }}
        POSTGRES_PASSWORD: ${{ secrets.pg_pw }}
        POSTGRES_DB: ${{ secrets.pg_db }}
        POSTGRES_HOST: postgis

    - name: Check docker logs from geopetl
      run: docker logs geopetl

    # TODO: replace with docker health check
    #- name: Check running containers
    #  run: sleep 5; docker ps

    #- name: Run pytest in geopetl container
    #  run: |
    #    docker exec -it geopetl \
    #      pytest geopetl/tests/test_postgis.py \
    #      --host=postgis \
    #      --port=5432 \
    #      --user=${{ secrets.pg_user }} \
    #      --pw=${{ secrets.pg_pw }} \
    #      --schema="geopetl/tests/fixtures_data/schemas/point.json" \
    #      &> pytest-output.txt; \
    #      cat pytest-output.txt

#      - name: Login to postgres
#      run: psql "host=localhost port=5432 dbname=${{ secrets.pg_db }} user=${{ secrets.pg_user }}password=${{ secrets.pg_pw }}" -c "SELECT version()"


#    - name: Docker Push to ECR (${{ steps.global-vars.outputs.aws_env_prefix }})
#      env: 
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        REPOSITORY_URL: 102658671810.dkr.ecr.us-east-1.amazonaws.com/vulcan





